/*
 * generated by Xtext
 */
grammar InternalHipsterDomainLanguage;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package fr.inria.diverse.hdl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.inria.diverse.hdl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import fr.inria.diverse.hdl.services.HipsterDomainLanguageGrammarAccess;

}

@parser::members {
 
 	private HipsterDomainLanguageGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(HipsterDomainLanguageGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleDomain
entryRuleDomain 
:
{ before(grammarAccess.getDomainRule()); }
	 ruleDomain
{ after(grammarAccess.getDomainRule()); } 
	 EOF 
;

// Rule Domain
ruleDomain
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDomainAccess().getElementsAssignment()); }
(rule__Domain__ElementsAssignment)*
{ after(grammarAccess.getDomainAccess().getElementsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDomainElement
entryRuleDomainElement 
:
{ before(grammarAccess.getDomainElementRule()); }
	 ruleDomainElement
{ after(grammarAccess.getDomainElementRule()); } 
	 EOF 
;

// Rule DomainElement
ruleDomainElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDomainElementAccess().getAlternatives()); }
(rule__DomainElement__Alternatives)
{ after(grammarAccess.getDomainElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntity
entryRuleEntity 
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityAccess().getGroup()); }
(rule__Entity__Group__0)
{ after(grammarAccess.getEntityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelation
entryRuleRelation 
:
{ before(grammarAccess.getRelationRule()); }
	 ruleRelation
{ after(grammarAccess.getRelationRule()); } 
	 EOF 
;

// Rule Relation
ruleRelation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationAccess().getGroup()); }
(rule__Relation__Group__0)
{ after(grammarAccess.getRelationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleField
entryRuleField 
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldAccess().getGroup()); }
(rule__Field__Group__0)
{ after(grammarAccess.getFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule RelationType
ruleRelationType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getAlternatives()); }
(rule__RelationType__Alternatives)
{ after(grammarAccess.getRelationTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule JHipsterType
ruleJHipsterType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJHipsterTypeAccess().getAlternatives()); }
(rule__JHipsterType__Alternatives)
{ after(grammarAccess.getJHipsterTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__DomainElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainElementAccess().getEntityParserRuleCall_0()); }
	ruleEntity
{ after(grammarAccess.getDomainElementAccess().getEntityParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDomainElementAccess().getRelationParserRuleCall_1()); }
	ruleRelation
{ after(grammarAccess.getDomainElementAccess().getRelationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getONE_TO_MANYEnumLiteralDeclaration_0()); }
(	'OneToMany' 
)
{ after(grammarAccess.getRelationTypeAccess().getONE_TO_MANYEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getRelationTypeAccess().getMANY_TO_ONEEnumLiteralDeclaration_1()); }
(	'ManyToOne' 
)
{ after(grammarAccess.getRelationTypeAccess().getMANY_TO_ONEEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getRelationTypeAccess().getONE_TO_ONEEnumLiteralDeclaration_2()); }
(	'OneToOne' 
)
{ after(grammarAccess.getRelationTypeAccess().getONE_TO_ONEEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getRelationTypeAccess().getMANY_TO_MANYEnumLiteralDeclaration_3()); }
(	'ManyToMany' 
)
{ after(grammarAccess.getRelationTypeAccess().getMANY_TO_MANYEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JHipsterType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJHipsterTypeAccess().getSTRINGEnumLiteralDeclaration_0()); }
(	'String' 
)
{ after(grammarAccess.getJHipsterTypeAccess().getSTRINGEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getJHipsterTypeAccess().getINTEGEREnumLiteralDeclaration_1()); }
(	'Integer' 
)
{ after(grammarAccess.getJHipsterTypeAccess().getINTEGEREnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getJHipsterTypeAccess().getLONGEnumLiteralDeclaration_2()); }
(	'Long' 
)
{ after(grammarAccess.getJHipsterTypeAccess().getLONGEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getJHipsterTypeAccess().getBIG_DECIMALEnumLiteralDeclaration_3()); }
(	'BigDecimal' 
)
{ after(grammarAccess.getJHipsterTypeAccess().getBIG_DECIMALEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getJHipsterTypeAccess().getFLOATEnumLiteralDeclaration_4()); }
(	'Float' 
)
{ after(grammarAccess.getJHipsterTypeAccess().getFLOATEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getJHipsterTypeAccess().getDOUBLEEnumLiteralDeclaration_5()); }
(	'Double' 
)
{ after(grammarAccess.getJHipsterTypeAccess().getDOUBLEEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getJHipsterTypeAccess().getENUMEnumLiteralDeclaration_6()); }
(	'Enum' 
)
{ after(grammarAccess.getJHipsterTypeAccess().getENUMEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getJHipsterTypeAccess().getBOOLEANEnumLiteralDeclaration_7()); }
(	'Boolean' 
)
{ after(grammarAccess.getJHipsterTypeAccess().getBOOLEANEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getJHipsterTypeAccess().getLOCAL_DATEEnumLiteralDeclaration_8()); }
(	'LocalDate' 
)
{ after(grammarAccess.getJHipsterTypeAccess().getLOCAL_DATEEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getJHipsterTypeAccess().getZONE_DATE_TIMEEnumLiteralDeclaration_9()); }
(	'ZoneDateTime' 
)
{ after(grammarAccess.getJHipsterTypeAccess().getZONE_DATE_TIMEEnumLiteralDeclaration_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Entity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getEntityKeyword_0()); }

	'entity' 

{ after(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameAssignment_1()); }
(rule__Entity__NameAssignment_1)
{ after(grammarAccess.getEntityAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getGroup_2()); }
(rule__Entity__Group_2__0)
{ after(grammarAccess.getEntityAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Entity__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_2__0__Impl
	rule__Entity__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_2_0()); }

	'{' 

{ after(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_2__1__Impl
	rule__Entity__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getFieldsAssignment_2_1()); }
(rule__Entity__FieldsAssignment_2_1)*
{ after(grammarAccess.getEntityAccess().getFieldsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_2_2()); }

	'}' 

{ after(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Relation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__0__Impl
	rule__Relation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getRelationshipKeyword_0()); }

	'relationship' 

{ after(grammarAccess.getRelationAccess().getRelationshipKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__1__Impl
	rule__Relation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getTypeAssignment_1()); }
(rule__Relation__TypeAssignment_1)
{ after(grammarAccess.getRelationAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__2__Impl
	rule__Relation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getRelationAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__3__Impl
	rule__Relation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getFromAssignment_3()); }
(rule__Relation__FromAssignment_3)
{ after(grammarAccess.getRelationAccess().getFromAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__4__Impl
	rule__Relation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getGroup_4()); }
(rule__Relation__Group_4__0)
{ after(grammarAccess.getRelationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__5__Impl
	rule__Relation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getToKeyword_5()); }

	'to' 

{ after(grammarAccess.getRelationAccess().getToKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__6__Impl
	rule__Relation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getToAssignment_6()); }
(rule__Relation__ToAssignment_6)
{ after(grammarAccess.getRelationAccess().getToAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__7__Impl
	rule__Relation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getGroup_7()); }
(rule__Relation__Group_7__0)
{ after(grammarAccess.getRelationAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getRelationAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Relation__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_4__0__Impl
	rule__Relation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getLeftCurlyBracketKeyword_4_0()); }

	'{' 

{ after(grammarAccess.getRelationAccess().getLeftCurlyBracketKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_4__1__Impl
	rule__Relation__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getFromRelationAssignment_4_1()); }
(rule__Relation__FromRelationAssignment_4_1)
{ after(grammarAccess.getRelationAccess().getFromRelationAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getRightCurlyBracketKeyword_4_2()); }

	'}' 

{ after(grammarAccess.getRelationAccess().getRightCurlyBracketKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Relation__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_7__0__Impl
	rule__Relation__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getLeftCurlyBracketKeyword_7_0()); }

	'{' 

{ after(grammarAccess.getRelationAccess().getLeftCurlyBracketKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_7__1__Impl
	rule__Relation__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getToRelationAssignment_7_1()); }
(rule__Relation__ToRelationAssignment_7_1)
{ after(grammarAccess.getRelationAccess().getToRelationAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getRightCurlyBracketKeyword_7_2()); }

	'}' 

{ after(grammarAccess.getRelationAccess().getRightCurlyBracketKeyword_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Field__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getNameAssignment_0()); }
(rule__Field__NameAssignment_0)
{ after(grammarAccess.getFieldAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__1__Impl
	rule__Field__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getTypeAssignment_1()); }
(rule__Field__TypeAssignment_1)
{ after(grammarAccess.getFieldAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getRequiredAssignment_2()); }
(rule__Field__RequiredAssignment_2)?
{ after(grammarAccess.getFieldAccess().getRequiredAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Domain__ElementsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainAccess().getElementsDomainElementParserRuleCall_0()); }
	ruleDomainElement{ after(grammarAccess.getDomainAccess().getElementsDomainElementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__FieldsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getFieldsFieldParserRuleCall_2_1_0()); }
	ruleField{ after(grammarAccess.getEntityAccess().getFieldsFieldParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getTypeRelationTypeEnumRuleCall_1_0()); }
	ruleRelationType{ after(grammarAccess.getRelationAccess().getTypeRelationTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__FromAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getFromEntityCrossReference_3_0()); }
(
{ before(grammarAccess.getRelationAccess().getFromEntityIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getRelationAccess().getFromEntityIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getRelationAccess().getFromEntityCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__FromRelationAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getFromRelationIDTerminalRuleCall_4_1_0()); }
	RULE_ID{ after(grammarAccess.getRelationAccess().getFromRelationIDTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__ToAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getToEntityCrossReference_6_0()); }
(
{ before(grammarAccess.getRelationAccess().getToEntityIDTerminalRuleCall_6_0_1()); }
	RULE_ID{ after(grammarAccess.getRelationAccess().getToEntityIDTerminalRuleCall_6_0_1()); }
)
{ after(grammarAccess.getRelationAccess().getToEntityCrossReference_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__ToRelationAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getToRelationIDTerminalRuleCall_7_1_0()); }
	RULE_ID{ after(grammarAccess.getRelationAccess().getToRelationIDTerminalRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getTypeJHipsterTypeEnumRuleCall_1_0()); }
	ruleJHipsterType{ after(grammarAccess.getFieldAccess().getTypeJHipsterTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__RequiredAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getRequiredRequiredKeyword_2_0()); }
(
{ before(grammarAccess.getFieldAccess().getRequiredRequiredKeyword_2_0()); }

	'required' 

{ after(grammarAccess.getFieldAccess().getRequiredRequiredKeyword_2_0()); }
)

{ after(grammarAccess.getFieldAccess().getRequiredRequiredKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


